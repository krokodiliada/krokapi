version: 2.1

orbs:
  node: circleci/node@4.1.0
  codecov: codecov/codecov@1.1.3

jobs:
  build-production:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          override-ci-command: npm install --production
      - run: npm run build

  build:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  prettier:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run: npm run prettier
      - persist_to_workspace:
          root: .
          paths:
            - .

  eslint:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run: npm run lint-junit
      - store_test_results:
          path: reports/eslint
      - store_artifacts:
          path: reports/eslint
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run: npm t
      - persist_to_workspace:
          root: .
          paths:
            - .
      - store_test_results:
          path: reports/tests
      - store_artifacts:
          path: reports/tests
      - store_artifacts:
          path: reports/coverage

  coverage:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - codecov/upload:
          file: "reports/coverage/clover.xml"

  build-docker:
    machine: true
    steps:
      - checkout
      - run: docker build -t krok/api .

  build-docker-and-deploy:
    machine: true
    steps:
      - checkout
      - run: docker build -t krok/api .
      - run: echo "$GH_REGISTRY_TOKEN" | docker login --username -u "$GH_REGISTRY_USER" --password-stdin ghcr.io
      - run: docker tag krok/api:latest ghcr.io/krokodiliada/krokapi:latest
      - run: docker push ghcr.io/krokodiliada/krokapi:latest

workflows:
  api_tests_and_coverage:
    jobs:
      - build
      - build-production
      - build-docker:
          requires:
            - build-production
          filters:
            branches:
              ignore:
                - main
      - prettier:
          requires:
            - build
      - eslint:
          requires:
            - build
      - test:
          requires:
            - eslint
      - coverage:
          requires:
            - test
      - build-docker-and-deploy:
          requires:
            - build-production
            - test
          filters:
            branches:
              only:
                - main
