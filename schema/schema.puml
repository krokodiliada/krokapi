@startuml

title Krokodiliada application database design

' skinparam linetype ortho

class Participant {
  Participant information
  ==
  #""id""
  +""first_name""
  +""last_name""
  +""middle_name""
  +""birthday""
  +""phone""
  +""email""
}

class Team {
  Team information
  ==
  #""id""
  +""participants"" - //""Array[Participant.id]""//
  +""krok"" - //""Krok.id""//
  +""category"" - //""Category.id""//
  +""extra_map_required""
}

class Krok {
  Information about the current event
  ==
  #""id""
  +""number""
  +""season""
  +""start_date""
  +""end_date""
  +""location"" - //""Dict[latitude, longitude]""//
  +""location_name""
}

class Category {
  Category information
  ==
  #""id""
  +""short_name""
  +""long_name""
  +""description""
  +""krok"" - //""Krok.id""//
  +""min_participants""
  +""max_participants""
  +""min_checkpoints"" -
  //    Minimum number of CP to take//
  //    Can be float (e.g. 0.5) or integer (e.g. 3).//
  +""max_time"" - //Total time allowed to finish//
  +""notes""
}

class CheckPoint {
  Check point information
  ==
  #""id""
  +""short_name""
  +""location"" - //""Dict[latitude, longitude]""//
  +""water"" - //True if used for the water stage//
  +""description""
  +""note"" - //Organizator's notes//
}

class CheckPointAssignment {
  Relations between checkpoints,
  stations and categories
  ==
  #""id""
  +""krok"" - //""Krok.id""//
  +""category"" - //""Category.id""//
  +""checkpoint"" - //""CheckPoint.id""//
  +""station"" - //""Station.id""//
  +""order""
  +""check_order"" - //If false, then it is a bonus CP//
  +""cost"" - //If bonus CP, then how much it costs//
  +""required"" - //True if check point has to be taken//
}

class Station {
  Information about the station
  ==
  #""id""
  +""enabled""
}

class Tag {
  Information about the tag
  ==
  #""id""
  +""enabled""
}

class TagAssignment {
  Information about which tag
  belongs to which participant
  ==
  #""id""
  +""tag"" - //""Tag.id""//
  +""participant"" - //""Participant.id""//
  +""krok"" - //""Krok.id""//
}

class Route {
  All stations scanned by each tag
  ==
  #""id""
  +""tag"" - //""Tag.id""//
  +""krok"" - //""Krok.id""//
  +""start"" - //Start timestamp//
  +""finish"" - //Finish timestamp//
  +""actions"" - //""Array[""//
    //""{""//
    //    ""~"station~": Station.id,""//
    //    ""~"timestamp~": timestamp,""//
    //""}]""//
}

class RouteWater {
  Information about the water stage
  ==
  #""id""
  +""team"" - //""Team.id""//
  +""start"" - //Start timestamp//
  +""finish"" - //Finish timestamp//
  +""actions"" - //""Array[""//
    //""{""//
    //    ""~"checkpoint~": CheckPoint.id,""//
    //    ""~"timestamp~": timestamp,""//
    //    ""~"touched~": true/false""//"
    //""}]""//
}

Team::participant *-right- Participant::id
Team::krok -- Krok::id
Team::category -down- Category::id
Krok::id -left- Category::krok
CheckPointAssignment::krok -up- Krok::id
CheckPointAssignment::category -left- Category::id
CheckPointAssignment::checkpoint -left- CheckPoint::id
CheckPointAssignment::station -right- Station::id
TagAssignment::tag -right- Tag::id
TagAssignment::krok -- Krok::id
TagAssignment::participant -left- Participant::id
Route::tag -up- Tag::id
Route::krok -left- Krok::id
Route::punches *-[norank]- Station::id
RouteWater::team -up- Team::id
RouteWater::actions *-[norank]- CheckPoint::id

@enduml
